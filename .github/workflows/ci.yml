name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}:latest
  PYTHON_VERSION: "3.11"

jobs:
  # -------------------------------
  # üßπ Job 1: Lint (Ruff + Black)
  # -------------------------------
  lint:
    name: Lint Code (ruff + black)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install linters
        run: |
          pip install ruff black

      - name: Run Ruff linting
        run: ruff check .

      - name: Run Black formatting check
        run: black --check .

  # -------------------------------
  # üß™ Job 2: Test with Coverage
  # -------------------------------
  test:
    name: Run Unit Tests (pytest + coverage)
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Run tests with coverage
        run: |
          source .venv/bin/activate
          pytest --cov=src --cov-report=xml --cov-fail-under=80

  # -------------------------------
  # üê≥ Job 3: Build & Push Docker Image
  # -------------------------------
  build:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and tag Docker image
        run: |
          docker build -t $IMAGE_NAME -t ghcr.io/${{ github.repository }}:${{ github.sha }} .

      - name: Push image to GHCR
        run: |
          docker push ghcr.io/${{ github.repository }}:${{ github.sha }}
          docker push $IMAGE_NAME

  # -------------------------------
  # üöÄ Job 4: Canary Deployment
  # -------------------------------
  canary-deploy:
    name: Canary Deployment
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Run canary container
        run: |
          docker run -d \
            -e CANARY=true \
            -p 8000:8000 \
            ghcr.io/${{ github.repository }}:${{ github.sha }}

      - name: Wait for service to start
        run: sleep 10

  # -------------------------------
  # ‚úÖ Job 5: Acceptance Tests (Golden Set)
  # -------------------------------
  acceptance-tests:
    name: Acceptance Tests (Golden Set)
    runs-on: ubuntu-latest
    needs: canary-deploy

    steps:
      - name: Run golden-set acceptance tests
        run: |
          echo "Running 5+ golden set endpoint checks..."
          for i in {1..5}; do
            STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8000/health)
            if [ "$STATUS" -ne 200 ]; then
              echo "‚ùå Endpoint failed with status $STATUS"
              exit 1
            fi
          done
          echo "‚úÖ All endpoints returned 200 OK."
